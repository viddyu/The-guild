import * as Config from '@oclif/config';
import Yarn from './yarn';
export default class Plugins {
    config: Config.IConfig;
    readonly yarn: Yarn;
    private readonly debug;
    constructor(config: Config.IConfig);
    pjson(): Promise<Config.PJSON.User>;
    list(): Promise<(Config.PJSON.PluginTypes.User | Config.PJSON.PluginTypes.Link)[]>;
    install(name: string, tag?: string): Promise<void>;
    link(p: string): Promise<void>;
    add(plugin: Config.PJSON.PluginTypes): Promise<void>;
    remove(name: string): Promise<void>;
    uninstall(name: string): Promise<void>;
    update(): Promise<void>;
    hasPlugin(name: string): Promise<Config.PJSON.PluginTypes.User | Config.PJSON.PluginTypes.Link | undefined>;
    yarnNodeVersion(): Promise<string | undefined>;
    unfriendlyName(name: string): string | undefined;
    friendlyName(name: string): string;
    private createPJSON();
    private readonly pjsonPath;
    private npmHasPackage(name);
    private savePJSON(pjson);
    private normalizePlugins(input);
}
